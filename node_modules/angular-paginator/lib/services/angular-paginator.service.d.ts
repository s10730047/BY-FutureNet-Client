import { EventEmitter } from '@angular/core';
import { AngularPaginatorInstance } from '../others/angular-paginator.interface';
import * as i0 from "@angular/core";
export declare class AngularPaginatorService {
    /** id is used to identify pagination instances */
    static id: string;
    /** instances is the collection of pagination componetns */
    instances: Record<string, AngularPaginatorInstance>;
    /** emits an event with instance id whenever the page number changes */
    change: EventEmitter<string>;
    /**
     * creates an instance for every pipe differentiated with id
     *
     * @param instance each instance refers to a unique pagination component
     */
    registerInstance(instance: AngularPaginatorInstance): void;
    /**
     * updates existing pagination instances available
     * and returns true if value has changed
     *
     * @param instance an unique pagination component
     */
    updateInstance(instance: AngularPaginatorInstance): boolean;
    /**
     * return instance with given id
     *
     * @param id unique id of the pagination component
     */
    getInstance(id: string): AngularPaginatorInstance;
    /**
     * return currentPage for given id
     *
     * @param id unique id of the pagination component
     */
    getCurrentPage(id: string): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<AngularPaginatorService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AngularPaginatorService>;
}
