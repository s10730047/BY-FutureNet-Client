import { PipeTransform } from '@angular/core';
import { AngularPaginatorService } from '../services/angular-paginator.service';
import { AngularPaginatorInstance, PaginatorPipeArgs } from '../others/angular-paginator.interface';
import * as i0 from "@angular/core";
/**
 * Pagination Pipe which paginates the array for the provided arguments such as `itemsPerPage` and `currentPage`
 */
export declare class AngularPaginatorPipe implements PipeTransform {
    private angularPaginatorService;
    /**
     *
     * @param angularPaginatorService service for angular pagiantor
     */
    constructor(angularPaginatorService: AngularPaginatorService);
    /**
     * this pipes paginates the array for the provided arguments such as `itemsPerPage` and `currentPage`
     *
     * @param array input array for which the manipulation happens
     * @param args input arguments for the paginator pipe
     */
    transform<T>(array: Array<T>, args?: PaginatorPipeArgs): Array<T>;
    /**
     * create an instance for each pipe
     *
     * @param array input array for which the manipulation happens
     * @param args input arguments for the paginator pipe
     */
    createInstance(array: unknown[], args?: PaginatorPipeArgs): AngularPaginatorInstance;
    static ɵfac: i0.ɵɵFactoryDeclaration<AngularPaginatorPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<AngularPaginatorPipe, "angularPaginator">;
}
