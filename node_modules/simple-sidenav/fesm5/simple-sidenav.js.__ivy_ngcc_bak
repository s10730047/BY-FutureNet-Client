import { trigger, style, animate, transition, keyframes, stagger, query, state } from '@angular/animations';
import { Component, Input, ViewEncapsulation, Output, EventEmitter, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var fadeIn = trigger('fadeIn', [
    transition('void => slide-in-stagger', [
        query(':enter', style({
            transform: 'translateX(-100%)',
            opacity: 0,
            height: 0,
            width: 0
        }), { optional: true }),
        query(':enter', stagger(55, [animate("{{ duration }}ms", keyframes([
                style({ transform: 'translateX(-100%)', opacity: 0, height: 0, width: 0 }),
                style({ transform: 'translateX(5%)', opacity: 0.5, height: '*' }),
                style({ transform: 'translateX(-3%)', opacity: 0.6, height: '*' }),
                style({ transform: 'translateX(2%)', opacity: 0.7, height: '*', width: '100%' }),
                style({ transform: 'translateX(0)', opacity: 1, height: '*', width: '100%' })
            ]))]), { optional: true })
    ], { params: { duration: 500 } }),
    transition('* => slide-in', [
        query(':self', style({ height: 0 }), { optional: true }),
        query(':self', animate("{{ duration }}ms", style({ height: '*' })), { optional: true })
    ], { params: { duration: 300 } })
]);
/** @type {?} */
var fadeOut = trigger('close', [
    transition('slide-out => void', [animate("{{ duration }}ms", style({ height: 0 }))], { params: { duration: 200 } })
]);
/** @type {?} */
var rotate = trigger('rotate', [
    state('default', style({ transform: 'translate(0, -50%) rotate(0)' })),
    state('rotated', style({ transform: 'translate(0, -50%) rotate(90deg)' })),
    transition('default <=> rotated', [animate('100ms')])
]);

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SimpleSidenavComponent = /** @class */ (function () {
    function SimpleSidenavComponent() {
        this.menu = [];
        this.show = true;
        this.animate = false;
        this.withArrow = true;
        this.onSidenav = new EventEmitter();
        this.activeOne = {};
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    SimpleSidenavComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        this.activeOne = {};
        if (changes.activeID && changes.activeID.currentValue) {
            this.activeID = changes.activeID.currentValue;
            this.activeID && this.menu && this.findActive();
        }
    };
    /**
     * @param {?} __0
     * @param {?} index
     * @return {?}
     */
    SimpleSidenavComponent.prototype.onNavClick = /**
     * @param {?} __0
     * @param {?} index
     * @return {?}
     */
    function (_a, index) {
        var id = _a.id, name = _a.name, icon = _a.icon;
        if (this.activeOne.id === id && this.activeOne.menu) {
            this.activeOne = {};
            this.onSidenav.emit(null);
            return;
        }
        this.onSidenav.emit({ id: id, name: name, icon: icon, index: index });
        this.activeOne = { id: id, name: name, icon: icon };
        if (this.menu[index].menu) {
            this.activeOne.menu = this.menu[index].menu;
        }
    };
    /**
     * @return {?}
     */
    SimpleSidenavComponent.prototype.findActive = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.menu.forEach(function (item) {
            if (item.id === _this.activeID || _this.hasActive(item.menu)) {
                _this.activeOne = item;
                return;
            }
        });
    };
    /**
     * @param {?} menu
     * @return {?}
     */
    SimpleSidenavComponent.prototype.hasActive = /**
     * @param {?} menu
     * @return {?}
     */
    function (menu) {
        var _this = this;
        return menu && menu.some(function (item) { return item.id === _this.activeID || _this.hasActive(item.menu); });
    };
    SimpleSidenavComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sm-simple-sidenav',
                    template: "<div class=\"simple-sidenav\"\n  *ngIf=\"show && menu && menu.length > 0\"\n  [@fadeIn]=\"animate && animation && animation.in\"\n  [@close]=\"animate && animation && animation.out\">\n  <div class=\"simple-sidenav__item\" *ngFor=\"let item of menu; let menuIndex = index\">\n    <div class=\"simple-sidenav__item-content\" (click)=\"onNavClick(item, menuIndex)\" [ngClass]=\"{'active': item.id === activeOne.id}\">\n      <img class=\"simple-sidenav__icon\" [src]=\"item.icon\" alt=\"icon\" *ngIf=\"item.icon\">\n      <span class=\"simple-sidenav__text\">{{ item.name }}</span>\n      <span class=\"simple-sidenav__arrow\"\n        *ngIf=\"withArrow && item.menu\"\n        [@rotate]=\"item.id === activeOne.id && activeOne.menu ? 'rotated' : 'default'\">\n        <svg focusable=\"false\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"></path></svg>\n      </span>\n    </div>\n    <sm-simple-sidenav\n      class=\"simple-sidenav-submenu\"\n      [animate]=\"true\"\n      [activeID]=\"activeID\"\n      [animation]=\"animation\"\n      [menu]=\"activeOne.menu\"\n      (onSidenav)=\"onSidenav.emit($event)\"\n      [withArrow]=\"withArrow\"\n      [show]=\"item.id === activeOne.id && item.menu\">\n    </sm-simple-sidenav>\n  </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    animations: [fadeIn, fadeOut, rotate],
                    styles: [".simple-sidenav{max-width:360px;overflow:hidden}.simple-sidenav__item{margin-top:3px;overflow:hidden}.simple-sidenav__item-content{position:relative;display:flex;justify-content:flex-start;align-items:center;background-color:#d6d6d6;padding:5px 15px;border-radius:4px}.simple-sidenav__item-content:hover{cursor:pointer}.simple-sidenav__icon{height:35px;margin-right:8px}.simple-sidenav__text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.simple-sidenav__arrow{position:absolute;width:30px;height:30px;right:12px;top:50%;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}.simple-sidenav .active{background-color:#b9b9b9}.simple-sidenav-submenu .simple-sidenav{padding-left:15px}"]
                }] }
    ];
    SimpleSidenavComponent.propDecorators = {
        menu: [{ type: Input }],
        show: [{ type: Input }],
        animation: [{ type: Input }],
        animate: [{ type: Input }],
        withArrow: [{ type: Input }],
        activeID: [{ type: Input }],
        onSidenav: [{ type: Output }]
    };
    return SimpleSidenavComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SimpleSidenavModule = /** @class */ (function () {
    function SimpleSidenavModule() {
    }
    SimpleSidenavModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [SimpleSidenavComponent],
                    imports: [
                        CommonModule
                    ],
                    exports: [SimpleSidenavComponent]
                },] }
    ];
    return SimpleSidenavModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { SimpleSidenavComponent, SimpleSidenavModule, fadeIn as ɵa, fadeOut as ɵb, rotate as ɵc };

//# sourceMappingURL=simple-sidenav.js.map