!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/animations"),require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("simple-sidenav",["exports","@angular/animations","@angular/core","@angular/common"],t):t(e["simple-sidenav"]={},e.ng.animations,e.ng.core,e.ng.common)}(this,function(e,t,n,i){"use strict";var a=t.trigger("fadeIn",[t.transition("void => slide-in-stagger",[t.query(":enter",t.style({transform:"translateX(-100%)",opacity:0,height:0,width:0}),{optional:!0}),t.query(":enter",t.stagger(55,[t.animate("{{ duration }}ms",t.keyframes([t.style({transform:"translateX(-100%)",opacity:0,height:0,width:0}),t.style({transform:"translateX(5%)",opacity:.5,height:"*"}),t.style({transform:"translateX(-3%)",opacity:.6,height:"*"}),t.style({transform:"translateX(2%)",opacity:.7,height:"*",width:"100%"}),t.style({transform:"translateX(0)",opacity:1,height:"*",width:"100%"})]))]),{optional:!0})],{params:{duration:500}}),t.transition("* => slide-in",[t.query(":self",t.style({height:0}),{optional:!0}),t.query(":self",t.animate("{{ duration }}ms",t.style({height:"*"})),{optional:!0})],{params:{duration:300}})]),s=t.trigger("close",[t.transition("slide-out => void",[t.animate("{{ duration }}ms",t.style({height:0}))],{params:{duration:200}})]),o=t.trigger("rotate",[t.state("default",t.style({transform:"translate(0, -50%) rotate(0)"})),t.state("rotated",t.style({transform:"translate(0, -50%) rotate(90deg)"})),t.transition("default <=> rotated",[t.animate("100ms")])]),r=function(){function e(){this.menu=[],this.show=!0,this.animate=!1,this.withArrow=!0,this.onSidenav=new n.EventEmitter,this.activeOne={}}return e.prototype.ngOnChanges=function(e){this.activeOne={},e.activeID&&e.activeID.currentValue&&(this.activeID=e.activeID.currentValue,this.activeID&&this.menu&&this.findActive())},e.prototype.onNavClick=function(e,t){var n=e.id,i=e.name,a=e.icon;if(this.activeOne.id===n&&this.activeOne.menu)return this.activeOne={},void this.onSidenav.emit(null);this.onSidenav.emit({id:n,name:i,icon:a,index:t}),this.activeOne={id:n,name:i,icon:a},this.menu[t].menu&&(this.activeOne.menu=this.menu[t].menu)},e.prototype.findActive=function(){var t=this;this.menu.forEach(function(e){(e.id===t.activeID||t.hasActive(e.menu))&&(t.activeOne=e)})},e.prototype.hasActive=function(e){var t=this;return e&&e.some(function(e){return e.id===t.activeID||t.hasActive(e.menu)})},e.decorators=[{type:n.Component,args:[{selector:"sm-simple-sidenav",template:'<div class="simple-sidenav"\n  *ngIf="show && menu && menu.length > 0"\n  [@fadeIn]="animate && animation && animation.in"\n  [@close]="animate && animation && animation.out">\n  <div class="simple-sidenav__item" *ngFor="let item of menu; let menuIndex = index">\n    <div class="simple-sidenav__item-content" (click)="onNavClick(item, menuIndex)" [ngClass]="{\'active\': item.id === activeOne.id}">\n      <img class="simple-sidenav__icon" [src]="item.icon" alt="icon" *ngIf="item.icon">\n      <span class="simple-sidenav__text">{{ item.name }}</span>\n      <span class="simple-sidenav__arrow"\n        *ngIf="withArrow && item.menu"\n        [@rotate]="item.id === activeOne.id && activeOne.menu ? \'rotated\' : \'default\'">\n        <svg focusable="false" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg>\n      </span>\n    </div>\n    <sm-simple-sidenav\n      class="simple-sidenav-submenu"\n      [animate]="true"\n      [activeID]="activeID"\n      [animation]="animation"\n      [menu]="activeOne.menu"\n      (onSidenav)="onSidenav.emit($event)"\n      [withArrow]="withArrow"\n      [show]="item.id === activeOne.id && item.menu">\n    </sm-simple-sidenav>\n  </div>\n</div>\n',encapsulation:n.ViewEncapsulation.None,animations:[a,s,o],styles:[".simple-sidenav{max-width:360px;overflow:hidden}.simple-sidenav__item{margin-top:3px;overflow:hidden}.simple-sidenav__item-content{position:relative;display:flex;justify-content:flex-start;align-items:center;background-color:#d6d6d6;padding:5px 15px;border-radius:4px}.simple-sidenav__item-content:hover{cursor:pointer}.simple-sidenav__icon{height:35px;margin-right:8px}.simple-sidenav__text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.simple-sidenav__arrow{position:absolute;width:30px;height:30px;right:12px;top:50%;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}.simple-sidenav .active{background-color:#b9b9b9}.simple-sidenav-submenu .simple-sidenav{padding-left:15px}"]}]}],e.propDecorators={menu:[{type:n.Input}],show:[{type:n.Input}],animation:[{type:n.Input}],animate:[{type:n.Input}],withArrow:[{type:n.Input}],activeID:[{type:n.Input}],onSidenav:[{type:n.Output}]},e}(),m=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[r],imports:[i.CommonModule],exports:[r]}]}],e}();e.SimpleSidenavComponent=r,e.SimpleSidenavModule=m,e.ɵa=a,e.ɵb=s,e.ɵc=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=simple-sidenav.umd.min.js.map