(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/animations'), require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('simple-sidenav', ['exports', '@angular/animations', '@angular/core', '@angular/common'], factory) :
    (factory((global['simple-sidenav'] = {}),global.ng.animations,global.ng.core,global.ng.common));
}(this, (function (exports,animations,core,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var fadeIn = animations.trigger('fadeIn', [
        animations.transition('void => slide-in-stagger', [
            animations.query(':enter', animations.style({
                transform: 'translateX(-100%)',
                opacity: 0,
                height: 0,
                width: 0
            }), { optional: true }),
            animations.query(':enter', animations.stagger(55, [animations.animate("{{ duration }}ms", animations.keyframes([
                    animations.style({ transform: 'translateX(-100%)', opacity: 0, height: 0, width: 0 }),
                    animations.style({ transform: 'translateX(5%)', opacity: 0.5, height: '*' }),
                    animations.style({ transform: 'translateX(-3%)', opacity: 0.6, height: '*' }),
                    animations.style({ transform: 'translateX(2%)', opacity: 0.7, height: '*', width: '100%' }),
                    animations.style({ transform: 'translateX(0)', opacity: 1, height: '*', width: '100%' })
                ]))]), { optional: true })
        ], { params: { duration: 500 } }),
        animations.transition('* => slide-in', [
            animations.query(':self', animations.style({ height: 0 }), { optional: true }),
            animations.query(':self', animations.animate("{{ duration }}ms", animations.style({ height: '*' })), { optional: true })
        ], { params: { duration: 300 } })
    ]);
    /** @type {?} */
    var fadeOut = animations.trigger('close', [
        animations.transition('slide-out => void', [animations.animate("{{ duration }}ms", animations.style({ height: 0 }))], { params: { duration: 200 } })
    ]);
    /** @type {?} */
    var rotate = animations.trigger('rotate', [
        animations.state('default', animations.style({ transform: 'translate(0, -50%) rotate(0)' })),
        animations.state('rotated', animations.style({ transform: 'translate(0, -50%) rotate(90deg)' })),
        animations.transition('default <=> rotated', [animations.animate('100ms')])
    ]);

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SimpleSidenavComponent = /** @class */ (function () {
        function SimpleSidenavComponent() {
            this.menu = [];
            this.show = true;
            this.animate = false;
            this.withArrow = true;
            this.onSidenav = new core.EventEmitter();
            this.activeOne = {};
        }
        /**
         * @param {?} changes
         * @return {?}
         */
        SimpleSidenavComponent.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
            function (changes) {
                this.activeOne = {};
                if (changes.activeID && changes.activeID.currentValue) {
                    this.activeID = changes.activeID.currentValue;
                    this.activeID && this.menu && this.findActive();
                }
            };
        /**
         * @param {?} __0
         * @param {?} index
         * @return {?}
         */
        SimpleSidenavComponent.prototype.onNavClick = /**
         * @param {?} __0
         * @param {?} index
         * @return {?}
         */
            function (_a, index) {
                var id = _a.id, name = _a.name, icon = _a.icon;
                if (this.activeOne.id === id && this.activeOne.menu) {
                    this.activeOne = {};
                    this.onSidenav.emit(null);
                    return;
                }
                this.onSidenav.emit({ id: id, name: name, icon: icon, index: index });
                this.activeOne = { id: id, name: name, icon: icon };
                if (this.menu[index].menu) {
                    this.activeOne.menu = this.menu[index].menu;
                }
            };
        /**
         * @return {?}
         */
        SimpleSidenavComponent.prototype.findActive = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.menu.forEach(function (item) {
                    if (item.id === _this.activeID || _this.hasActive(item.menu)) {
                        _this.activeOne = item;
                        return;
                    }
                });
            };
        /**
         * @param {?} menu
         * @return {?}
         */
        SimpleSidenavComponent.prototype.hasActive = /**
         * @param {?} menu
         * @return {?}
         */
            function (menu) {
                var _this = this;
                return menu && menu.some(function (item) { return item.id === _this.activeID || _this.hasActive(item.menu); });
            };
        SimpleSidenavComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sm-simple-sidenav',
                        template: "<div class=\"simple-sidenav\"\n  *ngIf=\"show && menu && menu.length > 0\"\n  [@fadeIn]=\"animate && animation && animation.in\"\n  [@close]=\"animate && animation && animation.out\">\n  <div class=\"simple-sidenav__item\" *ngFor=\"let item of menu; let menuIndex = index\">\n    <div class=\"simple-sidenav__item-content\" (click)=\"onNavClick(item, menuIndex)\" [ngClass]=\"{'active': item.id === activeOne.id}\">\n      <img class=\"simple-sidenav__icon\" [src]=\"item.icon\" alt=\"icon\" *ngIf=\"item.icon\">\n      <span class=\"simple-sidenav__text\">{{ item.name }}</span>\n      <span class=\"simple-sidenav__arrow\"\n        *ngIf=\"withArrow && item.menu\"\n        [@rotate]=\"item.id === activeOne.id && activeOne.menu ? 'rotated' : 'default'\">\n        <svg focusable=\"false\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"></path></svg>\n      </span>\n    </div>\n    <sm-simple-sidenav\n      class=\"simple-sidenav-submenu\"\n      [animate]=\"true\"\n      [activeID]=\"activeID\"\n      [animation]=\"animation\"\n      [menu]=\"activeOne.menu\"\n      (onSidenav)=\"onSidenav.emit($event)\"\n      [withArrow]=\"withArrow\"\n      [show]=\"item.id === activeOne.id && item.menu\">\n    </sm-simple-sidenav>\n  </div>\n</div>\n",
                        encapsulation: core.ViewEncapsulation.None,
                        animations: [fadeIn, fadeOut, rotate],
                        styles: [".simple-sidenav{max-width:360px;overflow:hidden}.simple-sidenav__item{margin-top:3px;overflow:hidden}.simple-sidenav__item-content{position:relative;display:flex;justify-content:flex-start;align-items:center;background-color:#d6d6d6;padding:5px 15px;border-radius:4px}.simple-sidenav__item-content:hover{cursor:pointer}.simple-sidenav__icon{height:35px;margin-right:8px}.simple-sidenav__text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.simple-sidenav__arrow{position:absolute;width:30px;height:30px;right:12px;top:50%;-webkit-transform:translate(0,-50%);transform:translate(0,-50%)}.simple-sidenav .active{background-color:#b9b9b9}.simple-sidenav-submenu .simple-sidenav{padding-left:15px}"]
                    }] }
        ];
        SimpleSidenavComponent.propDecorators = {
            menu: [{ type: core.Input }],
            show: [{ type: core.Input }],
            animation: [{ type: core.Input }],
            animate: [{ type: core.Input }],
            withArrow: [{ type: core.Input }],
            activeID: [{ type: core.Input }],
            onSidenav: [{ type: core.Output }]
        };
        return SimpleSidenavComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SimpleSidenavModule = /** @class */ (function () {
        function SimpleSidenavModule() {
        }
        SimpleSidenavModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [SimpleSidenavComponent],
                        imports: [
                            common.CommonModule
                        ],
                        exports: [SimpleSidenavComponent]
                    },] }
        ];
        return SimpleSidenavModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.SimpleSidenavComponent = SimpleSidenavComponent;
    exports.SimpleSidenavModule = SimpleSidenavModule;
    exports.ɵa = fadeIn;
    exports.ɵb = fadeOut;
    exports.ɵc = rotate;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=simple-sidenav.umd.js.map